#ifndef __Container__
#define __Container__

//------------------------------------------------------------------------------
// Container.h - содержит тип данных, представляющий простейший контейнер.
//------------------------------------------------------------------------------

#include "Shape.h"
#include "Rectangle.h"
#include "Circle.h"
#include "Triangle.h"

//------------------------------------------------------------------------------
// Простейший контейнер на основе одномерного массива
class Container {
public:
    // Инициализация контейнера.
    void Init();

    // Очистка контейнера от элементов (освобождение памяти).
    void Clear();

    // Ввод содержимого контейнера из указанного потока.
    void In(std::ifstream &ifst);

    // Случайный ввод содержимого контейнера.
    void InRnd(int size);

    // Вывод содержимого контейнера в указанный поток.
    void Out(std::ofstream &ofst);

    // Сортировка контейнера по возрастанию QuickSort.
    void Sort();
    
    void quickSort(Shape* cont[], int size);

private:
    // Максимальная длина.
    enum {
        max_len = 10000
    }; 

    // Текущая длина.
    int len; 
    Shape* cont[max_len];
};

#endif //__Container__
