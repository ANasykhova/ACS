     1                                  ; file.asm - использование файлов в NASM
     2                                  extern printf
     3                                  extern fscanf
     4                                  
     5                                  extern RECTANGLE
     6                                  extern TRIANGLE
     7                                  extern CIRCLE
     8                                  
     9                                  ;----------------------------------------------
    10                                  ; // Ввод параметров прямоугольника из файла
    11                                  ; void InRectangle(void *r, FILE *ifst) {
    12                                  ;     fscanf(ifst, "%d%d%d%d%d", (int*)r, (int*)(r+intSize),
    13                                  ;          (int*)(r+2*intSize), (int*)(r+3*intSize), (int*)(r+4*intSize));
    14                                  ; }
    15                                  ;----------------------------------------------
    16                                  global InRectangle
    17                                  InRectangle:
    18                                  section .data
    19 00000000 256425642564256425-         .infmt db "%d%d%d%d%d",0
    19 00000009 6400               
    20                                  section .bss
    21 00000000 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
    22 00000008 <res 00000008>              .prect  resq    1   ; адрес прямоугольника
    23                                  section .text
    24 00000000 55                      push rbp
    25 00000001 4889E5                  mov rbp, rsp
    26                                  
    27                                      ; Сохранение принятых аргументов
    28 00000004 48893C25[08000000]          mov     [.prect], rdi          ; сохраняется адрес прямоугольника
    29 0000000C 48893425[00000000]          mov     [.FILE], rsi           ; сохраняется указатель на файл
    30                                  
    31                                      ; Ввод прямоугольника из файла
    32 00000014 488B3C25[00000000]          mov     rdi, [.FILE]
    33 0000001C 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    33 0000001E [0000000000000000] 
    34 00000026 488B1C25[08000000]          mov     rbx, [.prect]       ; &x1
    35 0000002E 488B0C25[08000000]          mov     rcx, [.prect]
    36 00000036 4883C104                    add     rcx, 4              ; &y1 = &x1 + 4
    37 0000003A 488B1425[08000000]          mov     rdx, [.prect]
    38 00000042 4883C208                    add     rdx, 8               ; &x2 = &x1 + 8
    39 00000046 4C8B0425[08000000]          mov     r8, [.prect]
    40 0000004E 4983C00C                    add     r8, 12               ; &y2 = &x1 + 12
    41 00000052 4C8B0C25[08000000]          mov     r9, [.prect]
    42 0000005A 4983C110                    add     r9, 16            ; &color = &x1 + 16
    43 0000005E B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
    44 00000063 E8(00000000)                call    fscanf
    45                                  
    46 00000068 C9                      leave
    47 00000069 C3                      ret
    48                                  
    49                                  ;----------------------------------------------
    50                                  ; // Ввод параметров треугольника из файла
    51                                  ; void InTriangle(void *t, FILE *ifst) {
    52                                  ;     fscanf(ifst, "%d%d%d%d%d%d%d", (int*)t, (int*)(t+intSize),
    53                                  ;            (int*)(t+2*intSize), (int*)(t+3*intSize),
    54                                  ;            (int*)(t+4*intSize), (int*)(t+5*intSize),
    55                                  ;            (int*)(t+6*intSize));
    56                                  ; }
    57                                  ;----------------------------------------------
    58                                  global InTriangle
    59                                  InTriangle:
    60                                  section .data
    61 0000000B 256425642564256425-         .infmt db "%d%d%d%d%d%d%d",0
    61 00000014 642564256400       
    62                                  section .bss
    63 00000010 <res 00000008>              .FILE    resq    1   ; временное хранение указателя на файл
    64 00000018 <res 00000008>              .ptrian  resq    1   ; адрес треугольника
    65                                  section .text
    66 0000006A 55                      push rbp
    67 0000006B 4889E5                  mov rbp, rsp
    68                                  
    69                                      ; Сохранение принятых аргументов
    70 0000006E 48893C25[18000000]          mov     [.ptrian], rdi          ; сохраняется адрес треугольника
    71 00000076 48893425[10000000]          mov     [.FILE], rsi            ; сохраняется указатель на файл
    72                                  
    73                                      ; Ввод треугольника из файла
    74 0000007E 488B3C25[10000000]          mov     rdi, [.FILE]
    75 00000086 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
    75 00000088 [0B00000000000000] 
    76 00000090 488B1425[18000000]          mov     rdx, [.ptrian]      ; &x1
    77 00000098 488B0C25[18000000]          mov     rcx, [.ptrian]
    78 000000A0 4883C104                    add     rcx, 4              ; &y1 = &x1 + 4
    79 000000A4 4C8B0425[18000000]          mov     r8, [.ptrian]
    80 000000AC 4983C008                    add     r8, 8               ; &x2 = &x1 + 8
    81 000000B0 4C8B0C25[18000000]          mov     r9, [.ptrian]
    82 000000B8 4983C10C                    add     r9, 12              ; &y2 = &x1 + 12
    83 000000BC 4C8B1425[18000000]          mov     r10, [.ptrian]
    84 000000C4 4983C210                    add     r10, 16            ; &x3 = &x1 + 16
    85 000000C8 4C8B1C25[18000000]          mov     r11, [.ptrian]
    86 000000D0 4983C314                    add     r11, 20             ; &y3 = &x1 + 20
    87 000000D4 4C8B2425[18000000]          mov     r12, [.ptrian]
    88 000000DC 4983C418                    add     r12, 24            ; &color = &x1 + 24
    89 000000E0 B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
    90 000000E5 E8(00000000)                call    fscanf
    91                                  
    92 000000EA C9                      leave
    93 000000EB C3                      ret
    94                                  
    95                                  ;----------------------------------------------
    96                                  ; // Ввод параметров круга из файла
    97                                  ; void InCircle(void *c, FILE *ifst) {
    98                                  ;     fscanf(ifst, "%d%d%d%d", (int*)c, (int*)(c+intSize),
    99                                  ;         (int*)(c+2*intSize), (int*)(c+3*intSize));
   100                                  ; }
   101                                  ;----------------------------------------------
   102                                  global InCircle
   103                                  InCircle:
   104                                  section .data
   105 0000001A 256425642564256400          .infmt db "%d%d%d%d",0
   106                                  section .bss
   107 00000020 <res 00000008>              .FILE   resq    1   ; временное хранение указателя на файл
   108 00000028 <res 00000008>              .pcirc  resq    1   ; адрес круга
   109                                  section .text
   110 000000EC 55                      push rbp
   111 000000ED 4889E5                  mov rbp, rsp
   112                                  
   113                                      ; Сохранение принятых аргументов
   114 000000F0 48893C25[28000000]          mov     [.pcirc], rdi          ; сохраняется адрес круга
   115 000000F8 48893425[20000000]          mov     [.FILE], rsi           ; сохраняется указатель на файл
   116                                  
   117                                      ; Ввод прямоугольника из файла
   118 00000100 488B3C25[20000000]          mov     rdi, [.FILE]
   119 00000108 48BE-                       mov     rsi, .infmt         ; Формат - 1-й аргумент
   119 0000010A [1A00000000000000] 
   120 00000112 488B1425[28000000]          mov     rdx, [.pcirc]       ; &x
   121 0000011A 488B0C25[28000000]          mov     rcx, [.pcirc]
   122 00000122 4883C104                    add     rcx, 4              ; &y = &x + 4
   123 00000126 4C8B0425[28000000]          mov     r8, [.pcirc]
   124 0000012E 4983C008                    add     r8, 8               ; &r = &x + 8
   125 00000132 4C8B0C25[28000000]          mov     r9, [.pcirc]
   126 0000013A 4983C10C                    add     r9, 12              ; &color = &x + 12
   127 0000013E B800000000                  mov     rax, 0              ; нет чисел с плавающей точкой
   128 00000143 E8(00000000)                call    fscanf
   129                                  
   130 00000148 C9                      leave
   131 00000149 C3                      ret
   132                                  
   133                                  ;----------------------------------------------
   134                                  ; // Ввод параметров обобщенной фигуры из файла
   135                                  ; int InShape(void *s, FILE *ifst) {
   136                                  ;     int k;
   137                                  ;     fscanf(ifst, "%d", &k);
   138                                  ;     switch(k) {
   139                                  ;         case 1:
   140                                  ;             *((int*)s) = RECTANGLE;
   141                                  ;             InRectangle(s+intSize, ifst);
   142                                  ;             return 1;
   143                                  ;         case 2:
   144                                  ;             *((int*)s) = TRIANGLE;
   145                                  ;             InTriangle(s+intSize, ifst);
   146                                  ;             return 1;
   147                                  ;         case 3:
   148                                  ;             *((int*)s) = CIRCLE;
   149                                  ;             InCircle(s+intSize, ifst);
   150                                  ;             return 1;
   151                                  ;         default:
   152                                  ;             return 0;
   153                                  ;     }
   154                                  ; }
   155                                  ;----------------------------------------------
   156                                  global InShape
   157                                  InShape:
   158                                  section .data
   159 00000023 256400                      .tagFormat   db      "%d",0
   160 00000026 5461672069733A2025-         .tagOutFmt   db     "Tag is: %d",10,0
   160 0000002F 640A00             
   161                                  section .bss
   162 00000030 <res 00000008>              .FILE       resq    1   ; временное хранение указателя на файл
   163 00000038 <res 00000008>              .pshape     resq    1   ; адрес фигуры
   164 00000040 <res 00000004>              .shapeTag   resd    1   ; признак фигуры
   165                                  section .text
   166 0000014A 55                      push rbp
   167 0000014B 4889E5                  mov rbp, rsp
   168                                  
   169                                      ; Сохранение принятых аргументов
   170 0000014E 48893C25[38000000]          mov     [.pshape], rdi          ; сохраняется адрес фигуры
   171 00000156 48893425[30000000]          mov     [.FILE], rsi            ; сохраняется указатель на файл
   172                                  
   173                                      ; чтение признака фигуры и его обработка
   174 0000015E 488B3C25[30000000]          mov     rdi, [.FILE]
   175 00000166 48BE-                       mov     rsi, .tagFormat
   175 00000168 [2300000000000000] 
   176 00000170 488B1425[38000000]          mov     rdx, [.pshape]      ; адрес начала фигуры (ее признак)
   177 00000178 4831C0                      xor     rax, rax            ; нет чисел с плавающей точкой
   178 0000017B E8(00000000)                call    fscanf
   179                                  
   180                                      ; Тестовый вывод признака фигуры
   181                                  ;     mov     rdi, .tagOutFmt
   182                                  ;     mov     rax, [.pshape]
   183                                  ;     mov     esi, [rax]
   184                                  ;     call    printf
   185                                  
   186 00000180 488B0C25[38000000]          mov rcx, [.pshape]          ; загрузка адреса начала фигуры
   187 00000188 8B01                        mov eax, [rcx]              ; и получение прочитанного признака
   188 0000018A 3B0425[00000000]            cmp eax, [RECTANGLE]
   189 00000191 7416                        je .rectIn
   190 00000193 3B0425[00000000]            cmp eax, [TRIANGLE]
   191 0000019A 742D                        je .trianIn
   192 0000019C 3B0425[00000000]            cmp eax, [CIRCLE]
   193 000001A3 7444                        je .circIn
   194 000001A5 31C0                        xor eax, eax    ; Некорректный признак - обнуление кода возврата
   195 000001A7 EB60                        jmp     .return
   196                                  .rectIn:
   197                                      ; Ввод прямоугольника
   198 000001A9 488B3C25[38000000]          mov     rdi, [.pshape]
   199 000001B1 4883C704                    add     rdi, 4
   200 000001B5 488B3425[30000000]          mov     rsi, [.FILE]
   201 000001BD E83EFEFFFF                  call    InRectangle
   202 000001C2 B801000000                  mov     rax, 1  ; Код возврата - true
   203 000001C7 EB40                        jmp     .return
   204                                  .trianIn:
   205                                      ; Ввод треугольника
   206 000001C9 488B3C25[38000000]          mov     rdi, [.pshape]
   207 000001D1 4883C704                    add     rdi, 4
   208 000001D5 488B3425[30000000]          mov     rsi, [.FILE]
   209 000001DD E888FEFFFF                  call    InTriangle
   210 000001E2 B801000000                  mov     rax, 1  ; Код возврата - true
   211 000001E7 EB20                        jmp     .return
   212                                  .circIn:
   213                                      ; Ввод треугольника
   214 000001E9 488B3C25[38000000]          mov     rdi, [.pshape]
   215 000001F1 4883C704                    add     rdi, 4
   216 000001F5 488B3425[30000000]          mov     rsi, [.FILE]
   217 000001FD E8EAFEFFFF                  call    InCircle
   218 00000202 B801000000                  mov     rax, 1  ; Код возврата - true
   219 00000207 EB00                        jmp     .return
   220                                  .return:
   221                                  
   222 00000209 C9                      leave
   223 0000020A C3                      ret
   224                                  
   225                                  ;----------------------------------------------
   226                                  ; // Ввод содержимого контейнера из указанного файла
   227                                  ; void InContainer(void *c, int *len, FILE *ifst) {
   228                                  ;     void *tmp = c;
   229                                  ;     while(!feof(ifst)) {
   230                                  ;         if(InShape(tmp, ifst)) {
   231                                  ;             tmp = tmp + shapeSize;
   232                                  ;             (*len)++;
   233                                  ;         }
   234                                  ;     }
   235                                  ; }
   236                                  ;----------------------------------------------
   237                                  global InContainer
   238                                  InContainer:
   239                                  section .bss
   240 00000044 <res 00000008>              .pcont  resq    1   ; адрес контейнера
   241 0000004C <res 00000008>              .plen   resq    1   ; адрес для сохранения числа введенных элементов
   242 00000054 <res 00000008>              .FILE   resq    1   ; указатель на файл
   243                                  section .text
   244 0000020B 55                      push rbp
   245 0000020C 4889E5                  mov rbp, rsp
   246                                  
   247 0000020F 48893C25[44000000]          mov [.pcont], rdi   ; сохраняется указатель на контейнер
   248 00000217 48893425[4C000000]          mov [.plen], rsi    ; сохраняется указатель на длину
   249 0000021F 48891425[54000000]          mov [.FILE], rdx    ; сохраняется указатель на файл
   250                                      ; В rdi адрес начала контейнера
   251 00000227 4831DB                      xor rbx, rbx        ; число фигур = 0
   252 0000022A 4889D6                      mov rsi, rdx        ; перенос указателя на файл
   253                                  .loop:
   254                                      ; сохранение рабочих регистров
   255 0000022D 57                          push rdi
   256 0000022E 53                          push rbx
   257                                  
   258 0000022F 488B3425[54000000]          mov     rsi, [.FILE]
   259 00000237 B800000000                  mov     rax, 0      ; нет чисел с плавающей точкой
   260 0000023C E809FFFFFF                  call    InShape     ; ввод фигуры
   261 00000241 4883F800                    cmp rax, 0          ; проверка успешности ввода
   262 00000245 7E0B                        jle  .return        ; выход, если признак меньше или равен 0
   263                                  
   264 00000247 5B                          pop rbx
   265 00000248 48FFC3                      inc rbx
   266                                  
   267 0000024B 5F                          pop rdi
   268 0000024C 4883C710                    add rdi, 16         ; адрес следующей фигуры
   269                                  
   270 00000250 EBDB                        jmp .loop
   271                                  .return:
   272 00000252 488B0425[4C000000]          mov rax, [.plen]    ; перенос указателя на длину
   273 0000025A 8918                        mov [rax], ebx      ; занесение длины
   274 0000025C C9                      leave
   275 0000025D C3                      ret
   276                                  
